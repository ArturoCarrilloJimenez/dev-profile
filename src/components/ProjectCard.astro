---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import Chip from 'src/components/Chip.astro';
import Link from 'src/components/Link.astro';
import { cn } from 'src/utils';

type Props = {
	index?: string;
	projectTitle?: string;
	role?: string;
	chips?: string[];
	image?: ImageMetadata;
	urlDeploy?: string;
	urlFront?: string;
	urlBack?: string;
};

const {
	index = '00',
	projectTitle = '',
	chips = [],
	image,
	urlDeploy = '#',
	urlBack = '#',
	urlFront = '#',
} = Astro.props;
---

<div
	class={cn(
		'w-full p-3 bg-secondary-alt rounded-2xl lg:p-8 custom-transtion',
		"after:absolute after:content-[''] after:w-[80%] after:h-[1px] after:bg-border after:right-0 after:translate-y-[28px] last:after:hidden",
		'lg:after:translate-y-[96px] lg:after:w-1/2',
	)}
>
	<div class="relative flex lg:gap-8">
		<div
			class={cn(
				'relative overflow-hidden rounded-xl w-full saturate-0 custom-transition hover:saturate-[0.5] max-w-[1440px]',
				"before:absolute before:inset-0 before:content-[''] before:bg-black before:opacity-20 lg:before:bg-[unset]",
			)}
		>
			{
				image && (
					<Image
						src={image}
						alt={`Arturo Carrillo Project - ${projectTitle}`}
						widths={[360, 720, 1440]}
						format="webp"
						decoding="async"
						loading="lazy"
						fetchpriority="low"
						class="object-cover object-left-top w-full"
					/>
				)
			}
		</div>
	</div>
	<div class="mt-3 flex flex-col gap-1 justify-between lg:mt-8">
		<div class="flex justify-between gap-2 lg:flex-row lg:gap-8">
			<h3 class="text-[24px] leading-[32px] font-sans lg:text-[40px] lg:leading-[54px]">{projectTitle}</h3>
			<span class="font-sans text-[16px] leading-[24px] lg:text-[20px] lg:leading-[32px]">{index}</span>
		</div>
		<div class="flex flex-wrap gap-2">
			{chips.map(text => <Chip text={text} variant="outlined" />)}
		</div>
	</div>
	<div class="mt-3 flex flex-wrap mr-2 lg:mt-12">
		<Link href={urlDeploy} target={urlDeploy !== '#' ? '_blank' : undefined}>View</Link>
		<Link href={urlFront} target={urlFront !== '#' ? '_blank' : undefined}>Repo Front</Link>
		<Link href={urlBack} target={urlBack !== '#' ? '_blank' : undefined}>Repo Back</Link>
	</div>
</div>
